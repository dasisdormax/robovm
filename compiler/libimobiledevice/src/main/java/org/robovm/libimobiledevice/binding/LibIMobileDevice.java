/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.robovm.libimobiledevice.binding;

public class LibIMobileDevice implements LibIMobileDeviceConstants {
  public static PlistRef plist_new_dict() {
    long cPtr = LibIMobileDeviceJNI.plist_new_dict();
    return (cPtr == 0) ? null : new PlistRef(cPtr, false);
  }

  public static void plist_free(PlistRef plist) {
    LibIMobileDeviceJNI.plist_free(PlistRef.getCPtr(plist), plist);
  }

  public static void plist_to_bin(PlistRef plist, ByteArrayOut plist_bin, IntOut length) {
    LibIMobileDeviceJNI.plist_to_bin(PlistRef.getCPtr(plist), plist, ByteArrayOut.getCPtr(plist_bin), plist_bin, IntOut.getCPtr(length), length);
  }

  public static void plist_to_xml(PlistRef plist, ByteArrayOut plist_xml, IntOut length) {
    LibIMobileDeviceJNI.plist_to_xml(PlistRef.getCPtr(plist), plist, ByteArrayOut.getCPtr(plist_xml), plist_xml, IntOut.getCPtr(length), length);
  }

  public static void plist_from_bin(byte[] plist_bin, int length, PlistRefOut plist) {
    LibIMobileDeviceJNI.plist_from_bin(plist_bin, length, PlistRefOut.getCPtr(plist), plist);
  }

  public static void delete_StringOut_value(StringOut s) {
    LibIMobileDeviceJNI.delete_StringOut_value(StringOut.getCPtr(s), s);
  }

  public static void delete_ByteArrayOut_value(ByteArrayOut s) {
    LibIMobileDeviceJNI.delete_ByteArrayOut_value(ByteArrayOut.getCPtr(s), s);
  }

  public static void delete_StringArray_values(StringArray s, int length) {
    LibIMobileDeviceJNI.delete_StringArray_values(StringArray.getCPtr(s), s, length);
  }

  public static void delete_StringArray_values_z(StringArray s) {
    LibIMobileDeviceJNI.delete_StringArray_values_z(StringArray.getCPtr(s), s);
  }

  public static long get_global_instproxy_status_cb() {
    return LibIMobileDeviceJNI.get_global_instproxy_status_cb();
  }

  public static long get_global_idevice_event_cb() {
    return LibIMobileDeviceJNI.get_global_idevice_event_cb();
  }

  public static MobileImageMounterError upload_image(MobileImageMounterClientRef client, String image_path, String image_type, byte[] sig, long sig_size) {
    return MobileImageMounterError.swigToEnum(LibIMobileDeviceJNI.upload_image(MobileImageMounterClientRef.getCPtr(client), client, image_path, image_type, sig, sig_size));
  }

  public static void idevice_set_debug_level(int level) {
    LibIMobileDeviceJNI.idevice_set_debug_level(level);
  }

  public static IDeviceError idevice_events_subscribe(IDeviceSubscriptionContextOut context, long callback, int user_data) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_events_subscribe(IDeviceSubscriptionContextOut.getCPtr(context), context, callback, user_data));
  }

  public static IDeviceError idevice_events_unsubscribe(IDeviceSubscriptionContext context) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_events_unsubscribe(IDeviceSubscriptionContext.getCPtr(context), context));
  }

  public static IDeviceError idevice_event_subscribe(long callback, int user_data) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_event_subscribe(callback, user_data));
  }

  public static IDeviceError idevice_event_unsubscribe() {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_event_unsubscribe());
  }

  public static IDeviceError idevice_get_device_list(StringArrayOut devices, IntOut count) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_get_device_list(StringArrayOut.getCPtr(devices), devices, IntOut.getCPtr(count), count));
  }

  public static IDeviceError idevice_device_list_free(StringArray devices) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_device_list_free(StringArray.getCPtr(devices), devices));
  }

  public static IDeviceError idevice_get_device_list_extended(IDeviceInfoArrayOut devices, IntOut count) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_get_device_list_extended(IDeviceInfoArrayOut.getCPtr(devices), devices, IntOut.getCPtr(count), count));
  }

  public static IDeviceError idevice_device_list_extended_free(IDeviceInfoArray devices) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_device_list_extended_free(IDeviceInfoArray.getCPtr(devices), devices));
  }

  public static IDeviceError idevice_new(IDeviceRefOut device, String udid) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_new(IDeviceRefOut.getCPtr(device), device, udid));
  }

  public static IDeviceError idevice_new_with_options(IDeviceRefOut device, String udid, int options) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_new_with_options(IDeviceRefOut.getCPtr(device), device, udid, options));
  }

  public static IDeviceError idevice_free(IDeviceRef device) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_free(IDeviceRef.getCPtr(device), device));
  }

  public static IDeviceError idevice_connect(IDeviceRef device, short port, IDeviceConnectionRefOut connection) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connect(IDeviceRef.getCPtr(device), device, port, IDeviceConnectionRefOut.getCPtr(connection), connection));
  }

  public static IDeviceError idevice_disconnect(IDeviceConnectionRef connection) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_disconnect(IDeviceConnectionRef.getCPtr(connection), connection));
  }

  public static IDeviceError idevice_connection_send(IDeviceConnectionRef connection, byte[] data, int len, IntOut sent_bytes) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connection_send(IDeviceConnectionRef.getCPtr(connection), connection, data, len, IntOut.getCPtr(sent_bytes), sent_bytes));
  }

  public static IDeviceError idevice_connection_receive_timeout(IDeviceConnectionRef connection, byte[] data, int len, IntOut recv_bytes, int timeout) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connection_receive_timeout(IDeviceConnectionRef.getCPtr(connection), connection, data, len, IntOut.getCPtr(recv_bytes), recv_bytes, timeout));
  }

  public static IDeviceError idevice_connection_receive(IDeviceConnectionRef connection, byte[] data, int len, IntOut recv_bytes) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connection_receive(IDeviceConnectionRef.getCPtr(connection), connection, data, len, IntOut.getCPtr(recv_bytes), recv_bytes));
  }

  public static IDeviceError idevice_connection_enable_ssl(IDeviceConnectionRef connection) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connection_enable_ssl(IDeviceConnectionRef.getCPtr(connection), connection));
  }

  public static IDeviceError idevice_connection_disable_ssl(IDeviceConnectionRef connection) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connection_disable_ssl(IDeviceConnectionRef.getCPtr(connection), connection));
  }

  public static IDeviceError idevice_connection_disable_bypass_ssl(IDeviceConnectionRef connection, boolean sslBypass) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connection_disable_bypass_ssl(IDeviceConnectionRef.getCPtr(connection), connection, sslBypass));
  }

  public static IDeviceError idevice_connection_get_fd(IDeviceConnectionRef connection, IntOut fd) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_connection_get_fd(IDeviceConnectionRef.getCPtr(connection), connection, IntOut.getCPtr(fd), fd));
  }

  public static IDeviceError idevice_get_handle(IDeviceRef device, IntOut handle) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_get_handle(IDeviceRef.getCPtr(device), device, IntOut.getCPtr(handle), handle));
  }

  public static IDeviceError idevice_get_udid(IDeviceRef device, StringOut udid) {
    return IDeviceError.swigToEnum(LibIMobileDeviceJNI.idevice_get_udid(IDeviceRef.getCPtr(device), device, StringOut.getCPtr(udid), udid));
  }

  public static LockdowndError lockdownd_client_new(IDeviceRef device, LockdowndClientRefOut client, String label) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_client_new(IDeviceRef.getCPtr(device), device, LockdowndClientRefOut.getCPtr(client), client, label));
  }

  public static LockdowndError lockdownd_client_new_with_handshake(IDeviceRef device, LockdowndClientRefOut client, String label) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_client_new_with_handshake(IDeviceRef.getCPtr(device), device, LockdowndClientRefOut.getCPtr(client), client, label));
  }

  public static LockdowndError lockdownd_client_free(LockdowndClientRef client) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_client_free(LockdowndClientRef.getCPtr(client), client));
  }

  public static LockdowndError lockdownd_query_type(LockdowndClientRef client, StringOut type) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_query_type(LockdowndClientRef.getCPtr(client), client, StringOut.getCPtr(type), type));
  }

  public static LockdowndError lockdownd_get_value(LockdowndClientRef client, String domain, String key, PlistRefOut value) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_get_value(LockdowndClientRef.getCPtr(client), client, domain, key, PlistRefOut.getCPtr(value), value));
  }

  public static LockdowndError lockdownd_set_value(LockdowndClientRef client, String domain, String key, PlistRef value) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_set_value(LockdowndClientRef.getCPtr(client), client, domain, key, PlistRef.getCPtr(value), value));
  }

  public static LockdowndError lockdownd_remove_value(LockdowndClientRef client, String domain, String key) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_remove_value(LockdowndClientRef.getCPtr(client), client, domain, key));
  }

  public static LockdowndError lockdownd_start_service(LockdowndClientRef client, String identifier, LockdowndServiceDescriptorStructOut service) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_start_service(LockdowndClientRef.getCPtr(client), client, identifier, LockdowndServiceDescriptorStructOut.getCPtr(service), service));
  }

  public static LockdowndError lockdownd_start_service_with_escrow_bag(LockdowndClientRef client, String identifier, LockdowndServiceDescriptorStructOut service) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_start_service_with_escrow_bag(LockdowndClientRef.getCPtr(client), client, identifier, LockdowndServiceDescriptorStructOut.getCPtr(service), service));
  }

  public static LockdowndError lockdownd_start_session(LockdowndClientRef client, String host_id, StringOut session_id, IntOut sslEnabled) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_start_session(LockdowndClientRef.getCPtr(client), client, host_id, StringOut.getCPtr(session_id), session_id, IntOut.getCPtr(sslEnabled), sslEnabled));
  }

  public static LockdowndError lockdownd_stop_session(LockdowndClientRef client, String session_id) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_stop_session(LockdowndClientRef.getCPtr(client), client, session_id));
  }

  public static LockdowndError lockdownd_send(LockdowndClientRef client, PlistRef plist) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_send(LockdowndClientRef.getCPtr(client), client, PlistRef.getCPtr(plist), plist));
  }

  public static LockdowndError lockdownd_receive(LockdowndClientRef client, PlistRefOut plist) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_receive(LockdowndClientRef.getCPtr(client), client, PlistRefOut.getCPtr(plist), plist));
  }

  public static LockdowndError lockdownd_pair(LockdowndClientRef client, LockdowndPairRecordStruct pair_record) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_pair(LockdowndClientRef.getCPtr(client), client, LockdowndPairRecordStruct.getCPtr(pair_record), pair_record));
  }

  public static LockdowndError lockdownd_pair_with_options(LockdowndClientRef client, LockdowndPairRecordStruct pair_record, PlistRef options, PlistRefOut response) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_pair_with_options(LockdowndClientRef.getCPtr(client), client, LockdowndPairRecordStruct.getCPtr(pair_record), pair_record, PlistRef.getCPtr(options), options, PlistRefOut.getCPtr(response), response));
  }

  public static LockdowndError lockdownd_validate_pair(LockdowndClientRef client, LockdowndPairRecordStruct pair_record) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_validate_pair(LockdowndClientRef.getCPtr(client), client, LockdowndPairRecordStruct.getCPtr(pair_record), pair_record));
  }

  public static LockdowndError lockdownd_unpair(LockdowndClientRef client, LockdowndPairRecordStruct pair_record) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_unpair(LockdowndClientRef.getCPtr(client), client, LockdowndPairRecordStruct.getCPtr(pair_record), pair_record));
  }

  public static LockdowndError lockdownd_activate(LockdowndClientRef client, PlistRef activation_record) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_activate(LockdowndClientRef.getCPtr(client), client, PlistRef.getCPtr(activation_record), activation_record));
  }

  public static LockdowndError lockdownd_deactivate(LockdowndClientRef client) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_deactivate(LockdowndClientRef.getCPtr(client), client));
  }

  public static LockdowndError lockdownd_enter_recovery(LockdowndClientRef client) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_enter_recovery(LockdowndClientRef.getCPtr(client), client));
  }

  public static LockdowndError lockdownd_goodbye(LockdowndClientRef client) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_goodbye(LockdowndClientRef.getCPtr(client), client));
  }

  public static LockdowndError lockdownd_cu_pairing_create(LockdowndClientRef client, long pairing_callback, int cb_user_data, PlistRef host_info, PlistRef acl) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_cu_pairing_create(LockdowndClientRef.getCPtr(client), client, pairing_callback, cb_user_data, PlistRef.getCPtr(host_info), host_info, PlistRef.getCPtr(acl), acl));
  }

  public static LockdowndError lockdownd_cu_send_request_and_get_reply(LockdowndClientRef client, String request, PlistRef request_payload, PlistRefOut reply) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_cu_send_request_and_get_reply(LockdowndClientRef.getCPtr(client), client, request, PlistRef.getCPtr(request_payload), request_payload, PlistRefOut.getCPtr(reply), reply));
  }

  public static LockdowndError lockdownd_get_value_cu(LockdowndClientRef client, String domain, String key, PlistRefOut value) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_get_value_cu(LockdowndClientRef.getCPtr(client), client, domain, key, PlistRefOut.getCPtr(value), value));
  }

  public static LockdowndError lockdownd_pair_cu(LockdowndClientRef client) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_pair_cu(LockdowndClientRef.getCPtr(client), client));
  }

  public static void lockdownd_client_set_label(LockdowndClientRef client, String label) {
    LibIMobileDeviceJNI.lockdownd_client_set_label(LockdowndClientRef.getCPtr(client), client, label);
  }

  public static LockdowndError lockdownd_get_device_udid(LockdowndClientRef client, StringOut udid) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_get_device_udid(LockdowndClientRef.getCPtr(client), client, StringOut.getCPtr(udid), udid));
  }

  public static LockdowndError lockdownd_get_device_name(LockdowndClientRef client, StringOut device_name) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_get_device_name(LockdowndClientRef.getCPtr(client), client, StringOut.getCPtr(device_name), device_name));
  }

  public static LockdowndError lockdownd_get_sync_data_classes(LockdowndClientRef client, StringArrayOut classes, IntOut count) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_get_sync_data_classes(LockdowndClientRef.getCPtr(client), client, StringArrayOut.getCPtr(classes), classes, IntOut.getCPtr(count), count));
  }

  public static LockdowndError lockdownd_data_classes_free(StringArray classes) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_data_classes_free(StringArray.getCPtr(classes), classes));
  }

  public static LockdowndError lockdownd_service_descriptor_free(LockdowndServiceDescriptorStruct service) {
    return LockdowndError.swigToEnum(LibIMobileDeviceJNI.lockdownd_service_descriptor_free(LockdowndServiceDescriptorStruct.getCPtr(service), service));
  }

  public static String lockdownd_strerror(LockdowndError err) {
    return LibIMobileDeviceJNI.lockdownd_strerror(err.swigValue());
  }

  public static AfcError afc_client_new(IDeviceRef device, LockdowndServiceDescriptorStruct service, AfcClientRefOut client) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_client_new(IDeviceRef.getCPtr(device), device, LockdowndServiceDescriptorStruct.getCPtr(service), service, AfcClientRefOut.getCPtr(client), client));
  }

  public static AfcError afc_client_start_service(IDeviceRef device, AfcClientRefOut client, String label) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_client_start_service(IDeviceRef.getCPtr(device), device, AfcClientRefOut.getCPtr(client), client, label));
  }

  public static AfcError afc_client_free(AfcClientRef client) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_client_free(AfcClientRef.getCPtr(client), client));
  }

  public static AfcError afc_get_device_info(AfcClientRef client, StringArrayOut device_information) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_get_device_info(AfcClientRef.getCPtr(client), client, StringArrayOut.getCPtr(device_information), device_information));
  }

  public static AfcError afc_read_directory(AfcClientRef client, String path, StringArrayOut directory_information) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_read_directory(AfcClientRef.getCPtr(client), client, path, StringArrayOut.getCPtr(directory_information), directory_information));
  }

  public static AfcError afc_get_file_info(AfcClientRef client, String path, StringArrayOut file_information) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_get_file_info(AfcClientRef.getCPtr(client), client, path, StringArrayOut.getCPtr(file_information), file_information));
  }

  public static AfcError afc_file_open(AfcClientRef client, String filename, AfcFileMode file_mode, LongOut handle) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_open(AfcClientRef.getCPtr(client), client, filename, file_mode.swigValue(), LongOut.getCPtr(handle), handle));
  }

  public static AfcError afc_file_close(AfcClientRef client, long handle) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_close(AfcClientRef.getCPtr(client), client, handle));
  }

  public static AfcError afc_file_lock(AfcClientRef client, long handle, AfcLockOperation operation) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_lock(AfcClientRef.getCPtr(client), client, handle, operation.swigValue()));
  }

  public static AfcError afc_file_read(AfcClientRef client, long handle, byte[] data, int length, IntOut bytes_read) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_read(AfcClientRef.getCPtr(client), client, handle, data, length, IntOut.getCPtr(bytes_read), bytes_read));
  }

  public static AfcError afc_file_write(AfcClientRef client, long handle, byte[] data, int length, IntOut bytes_written) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_write(AfcClientRef.getCPtr(client), client, handle, data, length, IntOut.getCPtr(bytes_written), bytes_written));
  }

  public static AfcError afc_file_seek(AfcClientRef client, long handle, long offset, int whence) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_seek(AfcClientRef.getCPtr(client), client, handle, offset, whence));
  }

  public static AfcError afc_file_tell(AfcClientRef client, long handle, LongOut position) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_tell(AfcClientRef.getCPtr(client), client, handle, LongOut.getCPtr(position), position));
  }

  public static AfcError afc_file_truncate(AfcClientRef client, long handle, long newsize) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_file_truncate(AfcClientRef.getCPtr(client), client, handle, newsize));
  }

  public static AfcError afc_remove_path(AfcClientRef client, String path) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_remove_path(AfcClientRef.getCPtr(client), client, path));
  }

  public static AfcError afc_rename_path(AfcClientRef client, String from, String to) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_rename_path(AfcClientRef.getCPtr(client), client, from, to));
  }

  public static AfcError afc_make_directory(AfcClientRef client, String path) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_make_directory(AfcClientRef.getCPtr(client), client, path));
  }

  public static AfcError afc_truncate(AfcClientRef client, String path, long newsize) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_truncate(AfcClientRef.getCPtr(client), client, path, newsize));
  }

  public static AfcError afc_make_link(AfcClientRef client, AfcLinkType linktype, String target, String linkname) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_make_link(AfcClientRef.getCPtr(client), client, linktype.swigValue(), target, linkname));
  }

  public static AfcError afc_set_file_time(AfcClientRef client, String path, long mtime) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_set_file_time(AfcClientRef.getCPtr(client), client, path, mtime));
  }

  public static AfcError afc_remove_path_and_contents(AfcClientRef client, String path) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_remove_path_and_contents(AfcClientRef.getCPtr(client), client, path));
  }

  public static AfcError afc_get_device_info_key(AfcClientRef client, String key, StringOut value) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_get_device_info_key(AfcClientRef.getCPtr(client), client, key, StringOut.getCPtr(value), value));
  }

  public static AfcError afc_dictionary_free(StringOut dictionary) {
    return AfcError.swigToEnum(LibIMobileDeviceJNI.afc_dictionary_free(StringOut.getCPtr(dictionary), dictionary));
  }

  public static InstProxyError instproxy_client_new(IDeviceRef device, LockdowndServiceDescriptorStruct service, InstproxyClientRefOut client) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_client_new(IDeviceRef.getCPtr(device), device, LockdowndServiceDescriptorStruct.getCPtr(service), service, InstproxyClientRefOut.getCPtr(client), client));
  }

  public static InstProxyError instproxy_client_start_service(IDeviceRef device, InstproxyClientRefOut client, String label) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_client_start_service(IDeviceRef.getCPtr(device), device, InstproxyClientRefOut.getCPtr(client), client, label));
  }

  public static InstProxyError instproxy_client_free(InstproxyClientRef client) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_client_free(InstproxyClientRef.getCPtr(client), client));
  }

  public static InstProxyError instproxy_browse(InstproxyClientRef client, PlistRef client_options, PlistRefOut result) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_browse(InstproxyClientRef.getCPtr(client), client, PlistRef.getCPtr(client_options), client_options, PlistRefOut.getCPtr(result), result));
  }

  public static InstProxyError instproxy_browse_with_callback(InstproxyClientRef client, PlistRef client_options, long status_cb, int user_data) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_browse_with_callback(InstproxyClientRef.getCPtr(client), client, PlistRef.getCPtr(client_options), client_options, status_cb, user_data));
  }

  public static InstProxyError instproxy_lookup(InstproxyClientRef client, StringArray appids, PlistRef client_options, PlistRefOut result) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_lookup(InstproxyClientRef.getCPtr(client), client, StringArray.getCPtr(appids), appids, PlistRef.getCPtr(client_options), client_options, PlistRefOut.getCPtr(result), result));
  }

  public static InstProxyError instproxy_install(InstproxyClientRef client, String pkg_path, PlistRef client_options, long status_cb, int user_data) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_install(InstproxyClientRef.getCPtr(client), client, pkg_path, PlistRef.getCPtr(client_options), client_options, status_cb, user_data));
  }

  public static InstProxyError instproxy_upgrade(InstproxyClientRef client, String pkg_path, PlistRef client_options, long status_cb, int user_data) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_upgrade(InstproxyClientRef.getCPtr(client), client, pkg_path, PlistRef.getCPtr(client_options), client_options, status_cb, user_data));
  }

  public static InstProxyError instproxy_uninstall(InstproxyClientRef client, String appid, PlistRef client_options, long status_cb, int user_data) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_uninstall(InstproxyClientRef.getCPtr(client), client, appid, PlistRef.getCPtr(client_options), client_options, status_cb, user_data));
  }

  public static InstProxyError instproxy_lookup_archives(InstproxyClientRef client, PlistRef client_options, PlistRefOut result) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_lookup_archives(InstproxyClientRef.getCPtr(client), client, PlistRef.getCPtr(client_options), client_options, PlistRefOut.getCPtr(result), result));
  }

  public static InstProxyError instproxy_archive(InstproxyClientRef client, String appid, PlistRef client_options, long status_cb, int user_data) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_archive(InstproxyClientRef.getCPtr(client), client, appid, PlistRef.getCPtr(client_options), client_options, status_cb, user_data));
  }

  public static InstProxyError instproxy_restore(InstproxyClientRef client, String appid, PlistRef client_options, long status_cb, int user_data) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_restore(InstproxyClientRef.getCPtr(client), client, appid, PlistRef.getCPtr(client_options), client_options, status_cb, user_data));
  }

  public static InstProxyError instproxy_remove_archive(InstproxyClientRef client, String appid, PlistRef client_options, long status_cb, int user_data) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_remove_archive(InstproxyClientRef.getCPtr(client), client, appid, PlistRef.getCPtr(client_options), client_options, status_cb, user_data));
  }

  public static InstProxyError instproxy_check_capabilities_match(InstproxyClientRef client, StringArray capabilities, PlistRef client_options, PlistRefOut result) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_check_capabilities_match(InstproxyClientRef.getCPtr(client), client, StringArray.getCPtr(capabilities), capabilities, PlistRef.getCPtr(client_options), client_options, PlistRefOut.getCPtr(result), result));
  }

  public static void instproxy_command_get_name(PlistRef command, StringOut name) {
    LibIMobileDeviceJNI.instproxy_command_get_name(PlistRef.getCPtr(command), command, StringOut.getCPtr(name), name);
  }

  public static void instproxy_status_get_name(PlistRef status, StringOut name) {
    LibIMobileDeviceJNI.instproxy_status_get_name(PlistRef.getCPtr(status), status, StringOut.getCPtr(name), name);
  }

  public static InstProxyError instproxy_status_get_error(PlistRef status, StringOut name, StringOut description, LongOut code) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_status_get_error(PlistRef.getCPtr(status), status, StringOut.getCPtr(name), name, StringOut.getCPtr(description), description, LongOut.getCPtr(code), code));
  }

  public static void instproxy_status_get_current_list(PlistRef status, LongOut total, LongOut current_index, LongOut current_amount, PlistRefOut list) {
    LibIMobileDeviceJNI.instproxy_status_get_current_list(PlistRef.getCPtr(status), status, LongOut.getCPtr(total), total, LongOut.getCPtr(current_index), current_index, LongOut.getCPtr(current_amount), current_amount, PlistRefOut.getCPtr(list), list);
  }

  public static void instproxy_status_get_percent_complete(PlistRef status, IntOut percent) {
    LibIMobileDeviceJNI.instproxy_status_get_percent_complete(PlistRef.getCPtr(status), status, IntOut.getCPtr(percent), percent);
  }

  public static PlistRef instproxy_client_options_new() {
    long cPtr = LibIMobileDeviceJNI.instproxy_client_options_new();
    return (cPtr == 0) ? null : new PlistRef(cPtr, false);
  }

  public static void instproxy_client_options_set_return_attributes(PlistRef client_options) {
    LibIMobileDeviceJNI.instproxy_client_options_set_return_attributes(PlistRef.getCPtr(client_options), client_options);
  }

  public static void instproxy_client_options_free(PlistRef client_options) {
    LibIMobileDeviceJNI.instproxy_client_options_free(PlistRef.getCPtr(client_options), client_options);
  }

  public static InstProxyError instproxy_client_get_path_for_bundle_identifier(InstproxyClientRef client, String bundle_id, StringOut path) {
    return InstProxyError.swigToEnum(LibIMobileDeviceJNI.instproxy_client_get_path_for_bundle_identifier(InstproxyClientRef.getCPtr(client), client, bundle_id, StringOut.getCPtr(path), path));
  }

  public static MobileImageMounterError mobile_image_mounter_new(IDeviceRef device, LockdowndServiceDescriptorStruct service, MobileImageMounterClientRefOut client) {
    return MobileImageMounterError.swigToEnum(LibIMobileDeviceJNI.mobile_image_mounter_new(IDeviceRef.getCPtr(device), device, LockdowndServiceDescriptorStruct.getCPtr(service), service, MobileImageMounterClientRefOut.getCPtr(client), client));
  }

  public static MobileImageMounterError mobile_image_mounter_start_service(IDeviceRef device, MobileImageMounterClientRefOut client, String label) {
    return MobileImageMounterError.swigToEnum(LibIMobileDeviceJNI.mobile_image_mounter_start_service(IDeviceRef.getCPtr(device), device, MobileImageMounterClientRefOut.getCPtr(client), client, label));
  }

  public static MobileImageMounterError mobile_image_mounter_free(MobileImageMounterClientRef client) {
    return MobileImageMounterError.swigToEnum(LibIMobileDeviceJNI.mobile_image_mounter_free(MobileImageMounterClientRef.getCPtr(client), client));
  }

  public static MobileImageMounterError mobile_image_mounter_lookup_image(MobileImageMounterClientRef client, String image_type, PlistRefOut result) {
    return MobileImageMounterError.swigToEnum(LibIMobileDeviceJNI.mobile_image_mounter_lookup_image(MobileImageMounterClientRef.getCPtr(client), client, image_type, PlistRefOut.getCPtr(result), result));
  }

  public static MobileImageMounterError mobile_image_mounter_mount_image(MobileImageMounterClientRef client, String image_path, byte[] signature, short signature_size, String image_type, PlistRefOut result) {
    return MobileImageMounterError.swigToEnum(LibIMobileDeviceJNI.mobile_image_mounter_mount_image(MobileImageMounterClientRef.getCPtr(client), client, image_path, signature, signature_size, image_type, PlistRefOut.getCPtr(result), result));
  }

  public static MobileImageMounterError mobile_image_mounter_hangup(MobileImageMounterClientRef client) {
    return MobileImageMounterError.swigToEnum(LibIMobileDeviceJNI.mobile_image_mounter_hangup(MobileImageMounterClientRef.getCPtr(client), client));
  }

  public static DebugServerError debugserver_client_new(IDeviceRef device, LockdowndServiceDescriptorStruct service, DebugServerClientRefOut client) {
    return DebugServerError.swigToEnum(LibIMobileDeviceJNI.debugserver_client_new(IDeviceRef.getCPtr(device), device, LockdowndServiceDescriptorStruct.getCPtr(service), service, DebugServerClientRefOut.getCPtr(client), client));
  }

  public static DebugServerError debugserver_client_start_service(IDeviceRef device, DebugServerClientRefOut client, String label) {
    return DebugServerError.swigToEnum(LibIMobileDeviceJNI.debugserver_client_start_service(IDeviceRef.getCPtr(device), device, DebugServerClientRefOut.getCPtr(client), client, label));
  }

  public static DebugServerError debugserver_client_free(DebugServerClientRef client) {
    return DebugServerError.swigToEnum(LibIMobileDeviceJNI.debugserver_client_free(DebugServerClientRef.getCPtr(client), client));
  }

  public static DebugServerError debugserver_client_send(DebugServerClientRef client, byte[] data, int size, IntOut sent) {
    return DebugServerError.swigToEnum(LibIMobileDeviceJNI.debugserver_client_send(DebugServerClientRef.getCPtr(client), client, data, size, IntOut.getCPtr(sent), sent));
  }

  public static DebugServerError debugserver_client_receive_with_timeout(DebugServerClientRef client, byte[] data, int size, IntOut received, int timeout) {
    return DebugServerError.swigToEnum(LibIMobileDeviceJNI.debugserver_client_receive_with_timeout(DebugServerClientRef.getCPtr(client), client, data, size, IntOut.getCPtr(received), received, timeout));
  }

  public static DebugServerError debugserver_client_receive(DebugServerClientRef client, byte[] data, int size, IntOut received) {
    return DebugServerError.swigToEnum(LibIMobileDeviceJNI.debugserver_client_receive(DebugServerClientRef.getCPtr(client), client, data, size, IntOut.getCPtr(received), received));
  }


  public static PlistRef toPlistRef(long ptr) {
    return new PlistRef(ptr, false);
  }

}
